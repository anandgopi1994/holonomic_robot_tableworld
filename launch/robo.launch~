<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
   <!--arg name="world_name" value="$(find robo)/worlds/table.world"/--> 
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find robo)/urdf/robo.xacro'" />
 

<!--node pkg="tf" type="static_transform_publisher" name="map_base" args="0 0 0 0 0 0 \/map robo_base 100" />


 <node pkg="tf" type="static_transform_publisher" name="base_odom" args="0 0 0 0 0 0 \/robo_base odom 100" />


 <node pkg="tf" type="static_transform_publisher" name="base_laser_tf" args="0 0 0.4 0 0 0 \/robo_base laser_link 100" /-->



<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model robo -param robot_description"/>

<!--node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x 0 -y 3 -z 0 -model robo -param robot_description"/-->

<node pkg="robo" name="Table_based_controller" type="Table_based_controller.py" output="screen" />

 
</launch>
